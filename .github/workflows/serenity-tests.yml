name: Serenity API Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del c칩digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Java 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      # 3. Compilar y ejecutar pruebas
      - name: Run Serenity Tests
        run: mvn clean verify -B

      # 4. Publicar reporte Serenity como artefacto
      - name: Upload Serenity Report
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report
          path: target/site/serenity


          # NOTA: Este proyecto de automatizaci칩n corre OK de forma local desde el IDE ejecutandolo desde el runner
          # o desde los comandos mvn clean verify pero NO CORRE DESDE EL PIPELINE ya que fakestoreapi.com bloquea
          # peticiones desde runners de CI/CD (GitHub Actions, GitLab, Azure Pipelines, etc.) por temas de CORS, limitaci칩n de tr치fico o firewall.